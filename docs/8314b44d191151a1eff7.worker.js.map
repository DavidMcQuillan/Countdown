{"version":3,"sources":["../webpack/bootstrap 8314b44d191151a1eff7","NumbersWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","target","numbers","__webpack_exports__","writeExpression","bestValue","bestDistance","bestSolution","Operator","text","displayLinear","action","this","operators","a","b","val","solve","targetVal","useNumbers","forEachPermutation","items","permutation","size","forEach","length","_i","items_1","item","push","splice","indexOf","pop","applyOperatorPositionPermutations","testSolution","result","solution","solutionElementsToKeep","distance","Math","abs","solutionExpression","slice","self","onmessage","e","msg","data","postMessage","operatorPositionPermutations","values","operatorPositionPermutations_1","operatorIndices","expression","_a","operatorIndices_1","index","applyOperatorPermutations","operatorNum","lastLevel","operators_1","operator","testSolve","postfix","stack","numUsedElements","postfix_1","element","operand2","operand1","InfixOperation","toString","postfix_2","operation","join"],"mappings":"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","file":"8314b44d191151a1eff7.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8314b44d191151a1eff7","function postNumbersResult(msg: [number, string]) {\r\n    const workaround = self as any;\r\n    workaround.postMessage(msg);\r\n}\r\n\r\nfunction isInt(n: number) {\r\n    return n >> 0 === n;\r\n}\r\n\r\nlet target: number;\r\nlet numbers: number[];\r\nlet bestValue: number = -1;\r\nlet bestDistance = 99999;\r\nlet bestSolution: string = '';\r\n\r\nclass Operator {\r\n    constructor(public readonly text: string, public readonly displayLinear: boolean, public readonly action: (a: number, b: number) => number | null) {\r\n\r\n    }\r\n}\r\n\r\nexport type Expression = Array<Operator | number>;\r\n\r\nfunction add(a: number, b: number) {\r\n    if (a < b) {\r\n        return null; // don't do it this way around, it doesn't look pleasant\r\n    }\r\n\r\n    return a + b;\r\n}\r\n\r\nfunction subtract(a: number, b: number) {\r\n    const val = a - b;\r\n    \r\n    if (val === b) {\r\n        return null; // a valid, but pointless operation\r\n    }\r\n    \r\n    if (val <= 0) {\r\n        return null; // not allowed by game rules\r\n    }\r\n\r\n    return val;\r\n}\r\n\r\nfunction multiply(a: number, b: number) {\r\n    if (a < b) {\r\n        return null; // don't do it this way around, it doesn't look pleasant\r\n    }\r\n\r\n    if (b === 1) {\r\n        return null; // a valid, but pointless operation\r\n    }\r\n\r\n    return a * b;\r\n}\r\n\r\nfunction divide(a: number, b: number) {\r\n    if (b === 1) {\r\n        return null; // a valid, but pointless operation\r\n    }\r\n\r\n    const val = a / b;\r\n\r\n    if (!isInt(val)) {\r\n        return null; // not allowed by game rules\r\n    }\r\n    \r\n    return val;\r\n}\r\n\r\nexport const operators: Operator[] = [\r\n    new Operator('+', true, add),\r\n    new Operator('-', true, subtract),\r\n    new Operator('x', false, multiply),\r\n    new Operator('รท', false, divide),\r\n];\r\n\r\nself.onmessage = e => {\r\n    const data = e.data as [string, number, number[]];\r\n\r\n    if (data[0] === 'calculate') {\r\n        solve(data[1], data[2]);\r\n    }\r\n    else if (data[0] === 'respond') {\r\n        // a result is needed NOW\r\n\r\n        postNumbersResult([bestValue, bestSolution]);\r\n    }\r\n}\r\n\r\nexport function solve(targetVal: number, useNumbers: number[]) {\r\n    target = targetVal;\r\n    numbers = useNumbers;\r\n\r\n    forEachPermutation(numbers, [], numbers.length, applyOperatorPositionPermutations);\r\n\r\n    return [bestValue, bestSolution];\r\n}\r\n\r\nfunction testSolution(result: number, solution: Expression, solutionElementsToKeep: number) {\r\n    const distance = Math.abs(result - target);\r\n    \r\n    if (distance < bestDistance || (distance === bestDistance && solution.length < bestSolution.length)) {\r\n        bestValue = result;\r\n        bestDistance = distance;\r\n\r\n        const solutionExpression = solution.slice(0, solutionElementsToKeep);\r\n        bestSolution = writeExpression(solutionExpression);\r\n    }\r\n}\r\n\r\nfunction forEachPermutation<T>(items: T[], permutation: T[], size: number, forEach: (val: T[]) => void) {\r\n    if (permutation.length === size) {\r\n        forEach(permutation);\r\n    }\r\n\r\n    for (const item of items) {\r\n        permutation.push(item);\r\n\r\n\r\n        items.splice(items.indexOf(item), 1);\r\n\r\n        forEachPermutation(items, permutation, size, forEach);\r\n\r\n        items.push(permutation.pop() as T);\r\n    }\r\n}\r\n\r\n// this fixed list only works for 6-number games, of course. D'oh! Can we calculate a reliable list quickly,\r\n// or do we just try all that aren't \"obviously\" wrong and abort if they are?\r\nconst operatorPositionPermutations = [\r\n    [6, 7, 8, 9, 10],\r\n    [5, 7, 8, 9, 10],\r\n    [5, 6, 8, 9, 10],\r\n    [5, 6, 7, 9, 10],\r\n    [5, 6, 7, 8, 10],\r\n    [4, 7, 8, 9, 10],\r\n    [4, 6, 8, 9, 10],\r\n    [4, 6, 7, 9, 10],\r\n    [4, 6, 7, 8, 10],\r\n    [4, 5, 8, 9, 10],\r\n    [4, 5, 7, 9, 10],\r\n    [4, 5, 7, 8, 10],\r\n    [4, 5, 6, 9, 10],\r\n    [4, 5, 6, 8, 10],\r\n    [3, 7, 8, 9, 10],\r\n    [3, 6, 8, 9, 10],\r\n    [3, 6, 7, 9, 10],\r\n    [3, 6, 7, 8, 10],\r\n    [3, 5, 8, 9, 10],\r\n    [3, 5, 7, 9, 10],\r\n    [3, 5, 7, 8, 10],\r\n    [3, 5, 6, 9, 10],\r\n    [3, 5, 6, 8, 10],\r\n    [3, 4, 8, 9, 10],\r\n    [3, 4, 7, 9, 10],\r\n    [3, 4, 7, 8, 10],\r\n    [3, 4, 6, 9, 10],\r\n    [3, 4, 6, 8, 10],\r\n    [2, 7, 8, 9, 10],\r\n    [2, 6, 8, 9, 10],\r\n    [2, 6, 7, 9, 10],\r\n    [2, 6, 7, 8, 10],\r\n    [2, 5, 8, 9, 10],\r\n    [2, 5, 7, 9, 10],\r\n    [2, 5, 7, 8, 10],\r\n    [2, 5, 6, 9, 10],\r\n    [2, 5, 6, 8, 10],\r\n    [2, 4, 8, 9, 10],\r\n    [2, 4, 7, 9, 10],\r\n    [2, 4, 7, 8, 10],\r\n    [2, 4, 6, 9, 10],\r\n    [2, 4, 6, 8, 10],\r\n];\r\n\r\nfunction applyOperatorPositionPermutations(values: number[]) {\r\n    for (const operatorIndices of operatorPositionPermutations) {\r\n        const expression = values.slice();\r\n\r\n        // put blanks into the expression where the operators will go\r\n        for (const index of operatorIndices) {\r\n            expression.splice(index, 0, -1);\r\n        }\r\n\r\n        applyOperatorPermutations(expression, operatorIndices, operatorIndices.length - 1);\r\n    }\r\n}\r\n\r\nfunction applyOperatorPermutations(expression: Expression, operatorIndices: number[], operatorNum: number) {\r\n    const lastLevel = operatorNum === 0;\r\n\r\n    for (const operator of operators) {\r\n        const index = operatorIndices[operatorNum];\r\n        expression[index] = operator;\r\n\r\n        if (lastLevel) {\r\n            testSolve(expression);\r\n        }\r\n        else {\r\n            applyOperatorPermutations(expression, operatorIndices, operatorNum - 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction testSolve(postfix: Expression) {\r\n    // solve a postfix expression, testing each step of the way to see if that counts as a solution\r\n    if (postfix.length === 0) {\r\n        return;\r\n    } \r\n\r\n    const stack = [];\r\n\r\n    let numUsedElements = 0;\r\n    for (const element of postfix) {\r\n        numUsedElements++;\r\n\r\n        if (typeof element === 'number') {\r\n            stack.push(element);\r\n            continue;\r\n        }\r\n\r\n        if (stack.length < 2) {\r\n            return;\r\n        }\r\n\r\n        const operand2 = stack.pop() as number;\r\n        const operand1 = stack.pop() as number;\r\n        const result = element.action(operand1, operand2);\r\n\r\n        if (result === null) {\r\n            return;\r\n        }\r\n\r\n        testSolution(result, postfix, numUsedElements);\r\n\r\n        stack.push(result);\r\n    }\r\n}\r\n\r\nclass InfixOperation {\r\n    constructor(public readonly text: string, public readonly operator: Operator | null) {\r\n    }\r\n\r\n    public toString() {\r\n        return this.text;\r\n    }\r\n}\r\n\r\nexport function writeExpression(postfix: Expression) {\r\n    const stack: InfixOperation[] = [];\r\n\r\n    for (const element of postfix) {\r\n        if (typeof element === 'number') {\r\n            stack.push(new InfixOperation(element.toString(), null));\r\n            continue;\r\n        }\r\n\r\n        const operator = element;\r\n\r\n        const operand2 = stack.pop() as InfixOperation;\r\n        const operand1 = stack.pop() as InfixOperation;\r\n        \r\n        const bracketNeededOperand1 = operand1.operator !== null\r\n            && (!operator.displayLinear || !operand1.operator.displayLinear);\r\n        let text = bracketNeededOperand1 ?  `(${operand1.text})` : operand1.text;\r\n\r\n        text += ` ${operator.text} `;\r\n        \r\n        const bracketNeededOperand2 = operand2.operator !== null\r\n            && (!operator.displayLinear || !operand2.operator.displayLinear);\r\n        text += bracketNeededOperand2 ?  `(${operand2.text})` : operand2.text;\r\n\r\n        const operation = new InfixOperation(text, operator);\r\n        stack.push(operation);\r\n    }\r\n\r\n    return stack.join(' ');\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/NumbersWorker.ts"],"sourceRoot":""}
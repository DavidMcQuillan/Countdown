{"version":3,"sources":["../webpack/bootstrap b5e88357a7b4de9cf8bc","NumbersWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","target","numbers","bestValue","bestDistance","bestSolution","operators","a","b","val","testValue","value","solution","distance","Math","abs","length","addOperators","sequence","first","slice","shift","applyOperatorsAndTest","display","remainingNumbers","appendNumber","canContinue","_i","operators_1","operator","nextValue","nextDisplay","toString","self","onmessage","e","msg","data","findCombinations","committed","available","count","combo","remaining","next","splice","push","postMessage"],"mappings":"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","file":"b5e88357a7b4de9cf8bc.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b5e88357a7b4de9cf8bc","function postNumbersResult(msg: [number, string]) {\r\n    const workaround = self as any;\r\n    workaround.postMessage(msg);\r\n}\r\n\r\nfunction isInt(n: number) {\r\n    return n >> 0 === n;\r\n}\r\n\r\nlet target: number;\r\nlet numbers: number[];\r\nlet bestValue: number = -1;\r\nlet bestDistance = 99999;\r\nlet bestSolution: string = '';\r\n\r\nconst operators: Array<[string, (a: number, b: number) => number | null]> = [\r\n    ['+', (a, b) => a + b],\r\n    ['-', (a, b) => { const val = a - b; return val <= 0 ? null : val; }],\r\n    ['x', (a, b) => a * b],\r\n    ['/', (a, b) => { const val = a / b; return isInt(val) ? val : null; }],\r\n];\r\n\r\nself.onmessage = e => {\r\n    const data = e.data as [string, number, number[]];\r\n\r\n    if (data[0] === 'calculate') {\r\n        target = data[1];\r\n        numbers = data[2];\r\n        \r\n        findAllCombinations(numbers);\r\n    }\r\n    else if (data[0] === 'respond') {\r\n        // a result is needed NOW\r\n        postNumbersResult([bestValue, bestSolution]);\r\n    }\r\n}\r\n\r\nfunction testValue(value: number, solution: string) {\r\n    const distance = Math.abs(value - target);\r\n    \r\n    if (distance < bestDistance || (distance === bestDistance && solution.length < bestSolution.length)) {\r\n        bestValue = value;\r\n        bestDistance = distance;\r\n        bestSolution = solution;\r\n    }\r\n}\r\n\r\nfunction findAllCombinations(values: number[]) {\r\n    findCombinations([], values);\r\n}\r\n\r\nfunction findCombinations(committed: number[], available: number[]) {\r\n    const count = available.length;\r\n    const canContinue = count > 1;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        // create new combos by taking each remaining value, and adding it onto the previously committed array\r\n        const combo = committed.slice();\r\n        const remaining = available.slice();\r\n        const next = remaining.splice(i, 1)[0];\r\n\r\n        combo.push(next);\r\n        if (combo.length > 1) {\r\n            addOperators(combo);\r\n        }\r\n\r\n        if (canContinue) {\r\n            findCombinations(combo, remaining);\r\n        }\r\n    }\r\n}\r\n\r\nfunction addOperators(sequence: number[]) {\r\n    sequence = sequence.slice();\r\n    const first = sequence.shift() as number;\r\n\r\n    applyOperatorsAndTest(first, first.toString(), sequence);\r\n}\r\n\r\nfunction applyOperatorsAndTest(value: number, display: string, remainingNumbers: number[]) {\r\n    remainingNumbers = remainingNumbers.slice();\r\n    const appendNumber = remainingNumbers.shift() as number;\r\n    const canContinue = remainingNumbers.length > 0;\r\n\r\n    for (const operator of operators) {\r\n        const nextValue = operator[1](value, appendNumber);\r\n        if (nextValue === null) {\r\n            continue;\r\n        }\r\n\r\n        const nextDisplay = canContinue\r\n            ? `(${display} ${operator[0]} ${appendNumber})`\r\n            : `${display} ${operator[0]} ${appendNumber}`; // no brackets for the last one\r\n\r\n        testValue(nextValue, nextDisplay);\r\n\r\n        if (canContinue) {\r\n            applyOperatorsAndTest(nextValue, nextDisplay, remainingNumbers);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/NumbersWorker.ts"],"sourceRoot":""}
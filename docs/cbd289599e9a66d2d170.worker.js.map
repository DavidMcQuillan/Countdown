{"version":3,"sources":["../webpack/bootstrap cbd289599e9a66d2d170","NumbersWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","target","numbers","bestValue","bestDistance","bestSolution","operators","a","b","val","testSolution","result","solution","solutionElementsToKeep","distance","Math","abs","length","solutionExpression","slice","postfix","stack","_i","postfix_2","element","operand2","pop","operand1","bracketed","push","toString","fullText","join","substr","writeExpression","self","onmessage","e","msg","data","forEachPermutation","items","permutation","size","forEach","items_1","item","splice","indexOf","applyOperatorPositionPermutations","postMessage","operatorPositionPermutations","values","operatorPositionPermutations_1","operatorIndices","expression","_a","operatorIndices_1","index","applyOperatorPermutations","operatorNum","lastLevel","operators_1","operator","testSolve","numUsedElements","postfix_1"],"mappings":"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","file":"cbd289599e9a66d2d170.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cbd289599e9a66d2d170","function postNumbersResult(msg: [number, string]) {\r\n    const workaround = self as any;\r\n    workaround.postMessage(msg);\r\n}\r\n\r\nfunction isInt(n: number) {\r\n    return n >> 0 === n;\r\n}\r\n\r\nlet target: number;\r\nlet numbers: number[];\r\nlet bestValue: number = -1;\r\nlet bestDistance = 99999;\r\nlet bestSolution: string = '';\r\n\r\ntype Operator = [string, (a: number, b: number) => number | null];\r\ntype Expression = Array<Operator | number>;\r\n\r\nfunction add(a: number, b: number) {\r\n    if (a < b) {\r\n        return null; // don't do it this way around, it doesn't look pleasant\r\n    }\r\n\r\n    return a + b;\r\n}\r\n\r\nfunction subtract(a: number, b: number) {\r\n    const val = a - b;\r\n    \r\n    if (val === b) {\r\n        return null; // a valid, but pointless operation\r\n    }\r\n    \r\n    if (val <= 0) {\r\n        return null; // not allowed by game rules\r\n    }\r\n\r\n    return val;\r\n}\r\n\r\nfunction multiply(a: number, b: number) {\r\n    if (a < b) {\r\n        return null; // don't do it this way around, it doesn't look pleasant\r\n    }\r\n\r\n    if (b === 1) {\r\n        return null; // a valid, but pointless operation\r\n    }\r\n\r\n    return a * b;\r\n}\r\n\r\nfunction divide(a: number, b: number) {\r\n    if (b === 1) {\r\n        return null; // a valid, but pointless operation\r\n    }\r\n\r\n    const val = a / b;\r\n\r\n    if (!isInt(val)) {\r\n        return null; // not allowed by game rules\r\n    }\r\n    \r\n    return val;\r\n}\r\n\r\nconst operators: Operator[] = [\r\n    ['+', add],\r\n    ['-', subtract],\r\n    ['x', multiply],\r\n    ['รท', divide],\r\n];\r\n\r\nself.onmessage = e => {\r\n    const data = e.data as [string, number, number[]];\r\n\r\n    if (data[0] === 'calculate') {\r\n        target = data[1];\r\n        numbers = data[2];\r\n        \r\n        forEachPermutation(numbers, [], numbers.length, applyOperatorPositionPermutations);\r\n    }\r\n    else if (data[0] === 'respond') {\r\n        // a result is needed NOW\r\n\r\n        postNumbersResult([bestValue, bestSolution]);\r\n    }\r\n}\r\n\r\nfunction testSolution(result: number, solution: Expression, solutionElementsToKeep: number) {\r\n    const distance = Math.abs(result - target);\r\n    \r\n    if (distance < bestDistance || (distance === bestDistance && solution.length < bestSolution.length)) {\r\n        bestValue = result;\r\n        bestDistance = distance;\r\n\r\n        const solutionExpression = solution.slice(0, solutionElementsToKeep);\r\n        bestSolution = writeExpression(solutionExpression);\r\n    }\r\n}\r\n\r\nfunction forEachPermutation<T>(items: T[], permutation: T[], size: number, forEach: (val: T[]) => void) {\r\n    if (permutation.length === size) {\r\n        forEach(permutation);\r\n    }\r\n\r\n    for (const item of items) {\r\n        permutation.push(item);\r\n\r\n\r\n        items.splice(items.indexOf(item), 1);\r\n\r\n        forEachPermutation(items, permutation, size, forEach);\r\n\r\n        items.push(permutation.pop() as T);\r\n    }\r\n}\r\n\r\n// this fixed list only works for 6-number games, of course. D'oh! Can we calculate a reliable list quickly,\r\n// or do we just try all that aren't \"obviously\" wrong and abort if they are?\r\nconst operatorPositionPermutations = [\r\n    [6, 7, 8, 9, 10],\r\n    [5, 7, 8, 9, 10],\r\n    [5, 6, 8, 9, 10],\r\n    [5, 6, 7, 9, 10],\r\n    [5, 6, 7, 8, 10],\r\n    [4, 7, 8, 9, 10],\r\n    [4, 6, 8, 9, 10],\r\n    [4, 6, 7, 9, 10],\r\n    [4, 6, 7, 8, 10],\r\n    [4, 5, 8, 9, 10],\r\n    [4, 5, 7, 9, 10],\r\n    [4, 5, 7, 8, 10],\r\n    [4, 5, 6, 9, 10],\r\n    [4, 5, 6, 8, 10],\r\n    [3, 7, 8, 9, 10],\r\n    [3, 6, 8, 9, 10],\r\n    [3, 6, 7, 9, 10],\r\n    [3, 6, 7, 8, 10],\r\n    [3, 5, 8, 9, 10],\r\n    [3, 5, 7, 9, 10],\r\n    [3, 5, 7, 8, 10],\r\n    [3, 5, 6, 9, 10],\r\n    [3, 5, 6, 8, 10],\r\n    [3, 4, 8, 9, 10],\r\n    [3, 4, 7, 9, 10],\r\n    [3, 4, 7, 8, 10],\r\n    [3, 4, 6, 9, 10],\r\n    [3, 4, 6, 8, 10],\r\n    [2, 7, 8, 9, 10],\r\n    [2, 6, 8, 9, 10],\r\n    [2, 6, 7, 9, 10],\r\n    [2, 6, 7, 8, 10],\r\n    [2, 5, 8, 9, 10],\r\n    [2, 5, 7, 9, 10],\r\n    [2, 5, 7, 8, 10],\r\n    [2, 5, 6, 9, 10],\r\n    [2, 5, 6, 8, 10],\r\n    [2, 4, 8, 9, 10],\r\n    [2, 4, 7, 9, 10],\r\n    [2, 4, 7, 8, 10],\r\n    [2, 4, 6, 9, 10],\r\n    [2, 4, 6, 8, 10],\r\n];\r\n\r\nfunction applyOperatorPositionPermutations(values: number[]) {\r\n    for (const operatorIndices of operatorPositionPermutations) {\r\n        const expression = values.slice();\r\n\r\n        // put blanks into the expression where the operators will go\r\n        for (const index of operatorIndices) {\r\n            expression.splice(index, 0, -1);\r\n        }\r\n\r\n        applyOperatorPermutations(expression, operatorIndices, operatorIndices.length - 1);\r\n    }\r\n}\r\n\r\nfunction applyOperatorPermutations(expression: Expression, operatorIndices: number[], operatorNum: number) {\r\n    const lastLevel = operatorNum === 0;\r\n\r\n    for (const operator of operators) {\r\n        const index = operatorIndices[operatorNum];\r\n        expression[index] = operator;\r\n\r\n        if (lastLevel) {\r\n            testSolve(expression);\r\n        }\r\n        else {\r\n            applyOperatorPermutations(expression, operatorIndices, operatorNum - 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction testSolve(postfix: Expression) {\r\n    // solve a postfix expression, testing each step of the way to see if that counts as a solution\r\n    if (postfix.length === 0) {\r\n        return;\r\n    } \r\n\r\n    const stack = [];\r\n\r\n    let numUsedElements = 0;\r\n    for (const element of postfix) {\r\n        numUsedElements++;\r\n\r\n        if (typeof element === 'number') {\r\n            stack.push(element);\r\n            continue;\r\n        }\r\n\r\n        if (stack.length < 2) {\r\n            return;\r\n        }\r\n\r\n        const operand2 = stack.pop() as number;\r\n        const operand1 = stack.pop() as number;\r\n        const result = element[1](operand1, operand2);\r\n\r\n        if (result === null) {\r\n            return;\r\n        }\r\n\r\n        testSolution(result, postfix, numUsedElements);\r\n\r\n        stack.push(result);\r\n    }\r\n}\r\n\r\nfunction writeExpression(postfix: Expression) {\r\n    const stack: string[] = [];\r\n\r\n    for (const element of postfix) {\r\n        if (typeof element === 'number') {\r\n            stack.push(element.toString());\r\n            continue;\r\n        }\r\n\r\n        const operand2 = stack.pop() as string;\r\n        const operand1 = stack.pop() as string;\r\n        const bracketed = `(${operand1} ${element[0]} ${operand2})`;\r\n\r\n        stack.push(bracketed);\r\n    }\r\n\r\n    const fullText = stack.join(' ');\r\n    return fullText.substr(1, fullText.length - 2);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/NumbersWorker.ts"],"sourceRoot":""}
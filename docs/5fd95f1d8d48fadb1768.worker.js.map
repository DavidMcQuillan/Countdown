{"version":3,"sources":["../webpack/bootstrap 5fd95f1d8d48fadb1768","ConundrumWorker.ts","Anagrams.ts","Random.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","loadRandomWord","fetch","self","location","origin","size","_a","sent","text","lines","split","word","__WEBPACK_IMPORTED_MODULE_1__Random__","length","trim","scrambled","bestResult","remainingLetters","first","combinedChildWords","letters","ignoreFirst","mainWord","__WEBPACK_IMPORTED_MODULE_0__Anagrams__","join","childWords","wordIndex","Math","max","indexOf","substr","findChildWord","childWord","all","used","_i","used_1","value","pos","splice","removeUsed","onmessage","e","msg","data","postMessage","maxResults","toLowerCase","json","allWords","JSON","parse","body","slice","randomInt","minInclusive","maxExclusive","floor","random","shuffle","array","temporaryValue","randomIndex","currentIndex"],"mappings":"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","file":"5fd95f1d8d48fadb1768.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5fd95f1d8d48fadb1768","import { findWords } from './Anagrams';\r\nimport { randomInt, shuffle, shuffleWord } from './Random';\r\n\r\nfunction postMsg(msg: [string, string]) {\r\n    // TODO: save this word to sessionStorage so we don't choose it again\r\n    (self as any).postMessage(msg);\r\n}\r\n\r\nasync function loadRandomWord() {\r\n    const response = await fetch(`${self.location.origin}/conundrums/${size}.txt`);\r\n    const text = await response.text();\r\n    \r\n    const lines = text.split('\\n');\r\n    const word = lines[randomInt(0, lines.length)].trim();\r\n    let scrambled = shuffleWord(word);\r\n    bestResult = [scrambled, word];\r\n\r\n    const remainingLetters = word.split('');\r\n    let childWord: string;\r\n    let first = true;\r\n    let combinedChildWords = '';\r\n\r\n    do {\r\n        childWord = await findChildWord(remainingLetters, first, word);\r\n        if (childWord.length < 2) {\r\n            break;\r\n        }\r\n        \r\n        first = false;\r\n        removeUsed(remainingLetters, childWord.split(''));\r\n\r\n        combinedChildWords += childWord;\r\n        scrambled = combinedChildWords + remainingLetters.join('');\r\n        \r\n        bestResult = [scrambled, word];\r\n    } while (remainingLetters.length > 2);\r\n\r\n    scrambled = combinedChildWords + shuffle(remainingLetters).join('');\r\n    bestResult = [scrambled, word];\r\n}\r\n\r\nasync function findChildWord(letters: string[], ignoreFirst: boolean, mainWord: string) {\r\n    const childWords = await findWords(letters.join(''), 12);\r\n\r\n    let word = '';\r\n    let wordIndex = randomInt(ignoreFirst ? 1 : 0, Math.max(1, childWords.length - 4));\r\n\r\n    while (wordIndex < childWords.length) {\r\n        word = childWords[wordIndex];\r\n        wordIndex++;\r\n\r\n        if (word.length > 2 && mainWord.indexOf(word) !== -1) {\r\n            continue;\r\n        }\r\n\r\n        // sometimes a partial match is too much, e.g. for EMPLOYEES it found EMPLOYES\r\n        // another time COLUMNIST was turned into COLUMNSIT\r\n        // so if this word's first 4 letters or last 3 appear in the main word, its no good\r\n        if (word.length > 4 && (mainWord.indexOf(word.substr(0, 4)) !== -1)\r\n            || (mainWord.indexOf(word.substr(word.length - 3, 3)) !== -1)) {\r\n            continue;\r\n        }\r\n\r\n        break; // only break if this sequence isn't in the main word, and isn't close to it either\r\n    }\r\n\r\n    return word;\r\n}\r\n\r\nfunction removeUsed(all: string[], used: string[]) {\r\n    for (const value of used) {\r\n        const pos = all.indexOf(value);\r\n        all.splice(pos, 1);\r\n    }\r\n}\r\n\r\nlet size: number = 0;\r\nlet bestResult: [string, string] = ['', ''];\r\n\r\nself.onmessage = e => {\r\n    const data = e.data as [string, number];\r\n\r\n    if (data[0] === 'generate') {\r\n        size = data[1];\r\n        loadRandomWord();\r\n    }\r\n    else if (data[0] === 'respond') {\r\n        // a result is needed NOW ... send one only if we have one\r\n        if (bestResult[0] !== '') {\r\n            postMsg(bestResult);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ConundrumWorker.ts","export async function findWords(letters: string, maxResults: number) {\r\n    // if you feed this letters that exactly match a word, this API method only returns that word.\r\n    // this works around that by adding a . on the end\r\n    const response = await fetch(`https://cors-proxy.htmldriven.com/?url=http://www.anagramica.com/all/${letters.toLowerCase()}.`);\r\n    const data = await response.json();\r\n    \r\n    const allWords = JSON.parse(data.body).all as string[];\r\n    return allWords.length < maxResults ? allWords : allWords.slice(0, maxResults);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Anagrams.ts","export function randomInt(minInclusive: number, maxExclusive: number) {\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function shuffle<T>(array: T[]) {\r\n    let currentIndex = array.length;\r\n    let temporaryValue: T;\r\n    let randomIndex: number;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n        // Pick a remaining element...\r\n        randomIndex = randomInt(0, currentIndex);\r\n        currentIndex -= 1;\r\n  \r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n}\r\n\r\nexport function shuffleWord(word: string) {\r\n    return shuffle(word.split('')).join('');\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Random.ts"],"sourceRoot":""}
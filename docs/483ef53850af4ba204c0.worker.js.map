{"version":3,"sources":["../webpack/bootstrap 483ef53850af4ba204c0","ConundrumWorker.ts","Random.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","size","bestResult","self","onmessage","e","msg","data","fetch","location","origin","_a","sent","text","lines","split","word","__WEBPACK_IMPORTED_MODULE_0__Random__","length","trim","loadRandomWord","postMessage","randomInt","minInclusive","maxExclusive","Math","floor","random","array","temporaryValue","randomIndex","currentIndex","shuffle","join"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,05CC7CA,IAAIC,EAAe,EACfC,GAAgC,GAAI,IAExCC,KAAKC,UAAY,SAAAC,GACb,IAlBaC,EAkBPC,EAAOF,EAAEE,KAEC,aAAZA,EAAK,IACLN,EAAOM,EAAK,GAhBpB,sGACqB,SAAMC,MAASL,KAAKM,SAASC,OAAM,eAAeT,EAAI,gBAC1D,SADIU,EAAAC,OACWC,sBAAtBA,EAAOF,EAAAC,OAEPE,EAAQD,EAAKE,MAAM,MACnBC,EAAOF,EAAM1B,OAAA6B,EAAA,EAAA7B,CAAU,EAAG0B,EAAMI,SAASC,OAC/CjB,GAAcd,OAAA6B,EAAA,EAAA7B,CAAY4B,GAAOA,YAW7BI,IAEiB,YAAZb,EAAK,IAEY,KAAlBL,EAAW,KA1BNI,EA2BGJ,EAzBfC,KAAakB,YAAYf,mCCJxB,SAAAgB,EAAoBC,EAAsBC,GAC5C,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAeD,IAAiBA,YAwBjE,SAAsBP,GACxB,OAtBE,SAAqBY,GACvB,IACIC,EACAC,EAFAC,EAAeH,EAAMV,OAKzB,KAAO,IAAMa,GAGTD,EAAcR,EAAU,EAAGS,GAI3BF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGzB,OAAOD,EAIAI,CAAQhB,EAAKD,MAAM,KAAKkB,KAAK","file":"483ef53850af4ba204c0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 483ef53850af4ba204c0","import { randomInt, shuffleWord } from './Random';\r\n\r\nfunction postMsg(msg: [string, string]) {\r\n    // TODO: save this word to sessionStorage so we don't choose it again\r\n    (self as any).postMessage(msg);\r\n}\r\n\r\nasync function loadRandomWord() {\r\n    const response = await fetch(`${self.location.origin}/conundrums/${size}.txt`);\r\n    const text = await response.text();\r\n    \r\n    const lines = text.split('\\n');\r\n    const word = lines[randomInt(0, lines.length)].trim();\r\n    bestResult = [shuffleWord(word), word];\r\n}\r\n\r\nlet size: number = 0;\r\nlet bestResult: [string, string] = ['', ''];\r\n\r\nself.onmessage = e => {\r\n    const data = e.data as [string, number];\r\n\r\n    if (data[0] === 'generate') {\r\n        size = data[1];\r\n        loadRandomWord();\r\n    }\r\n    else if (data[0] === 'respond') {\r\n        // a result is needed NOW ... send one only if we have one\r\n        if (bestResult[0] !== '') {\r\n            postMsg(bestResult);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ConundrumWorker.ts","export function randomInt(minInclusive: number, maxExclusive: number) {\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function shuffle<T>(array: T[]) {\r\n    let currentIndex = array.length;\r\n    let temporaryValue: T;\r\n    let randomIndex: number;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n        // Pick a remaining element...\r\n        randomIndex = randomInt(0, currentIndex);\r\n        currentIndex -= 1;\r\n  \r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n}\r\n\r\nexport function shuffleWord(word: string) {\r\n    return shuffle(word.split('')).join('');\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Random.ts"],"sourceRoot":""}